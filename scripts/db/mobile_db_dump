--
-- PostgreSQL database dump
--

-- Dumped from database version 9.6.12
-- Dumped by pg_dump version 9.6.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


SET search_path = public, pg_catalog;

--
-- Name: get_items(smallint); Type: FUNCTION; Schema: public; Owner: mobileAdmin
--

CREATE FUNCTION get_items(in_topic_id smallint) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
	out varchar;
    url CONSTANT VARCHAR(32) := 'https://web.phone4pay.ru/images/';

BEGIN

	IF in_topic_id = 0 THEN

   		out = (SELECT json_agg(json_build_object('id', t.id, 'name', t.name , 
        'desc', t.description, 'volume', t.volume, 'cost', t.cost, 'img', 
        url || t.image)) 
   		FROM public.items AS t WHERE t.count >0);

	ELSE

   		out = (SELECT json_agg(json_build_object('id', t.id, 'name', t.name , 
        'desc', t.description, 'volume', t.volume, 'cost', t.cost, 'img', 
        url || t.image)) 
   		FROM public.items AS t WHERE t.topic_id = in_topic_id AND t.coumt > 0);

	END IF;
    
    IF out is NULL  THEN 
   		raise exception 'topic_id % search return 0. errCode: 102', in_topic_id 
   		USING ERRCODE = '01000';
	END IF;
	
	RETURN '{"items":' || out || '}';
END;
$$;


ALTER FUNCTION public.get_items(in_topic_id smallint) OWNER TO "mobileAdmin";

--
-- Name: get_topic(smallint); Type: FUNCTION; Schema: public; Owner: mobileAdmin
--

CREATE FUNCTION get_topic(in_id smallint) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE

out varchar;

BEGIN

IF in_id = 0 THEN

   out = (SELECT json_agg(json_build_object('id', t.id, 'name', t.name )) 
   FROM public.topics AS t);

ELSE

   out = (SELECT json_agg(json_build_object('id', t.id, 'name', t.name )) 
   FROM public.topics AS t WHERE t.id = in_id); 

END IF;

IF out is NULL  THEN 
   raise exception 'topic_id % not found. errCode: 102', in_id 
   USING ERRCODE = '01000';
END IF;
  
RETURN '{"topics":' || out || '}';

END;
$$;


ALTER FUNCTION public.get_topic(in_id smallint) OWNER TO "mobileAdmin";

--
-- Name: get_user_info(character varying); Type: FUNCTION; Schema: public; Owner: mobileAdmin
--

CREATE FUNCTION get_user_info(in_phone character varying, OUT email character varying, OUT state character varying, OUT registered character varying, OUT lastlogin character varying) RETURNS record
    LANGUAGE plpgsql
    AS $$
DECLARE
  
BEGIN
  SELECT a.email, a.enabled, to_char(a.registered, 'DD/MM/YYYY  HH24:MI:SS  TZ'),
  to_char(a.lastlogin, 'DD/MM/YYYY  HH24:MI:SS  TZ') 
  INTO email, state, registered, lastlogin
  FROM public.users a WHERE a.phone = in_phone;
END;
$$;


ALTER FUNCTION public.get_user_info(in_phone character varying, OUT email character varying, OUT state character varying, OUT registered character varying, OUT lastlogin character varying) OWNER TO "mobileAdmin";

--
-- Name: uniq(anyarray); Type: FUNCTION; Schema: public; Owner: mobileAdmin
--

CREATE FUNCTION uniq(anyarray) RETURNS anyarray
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
select array(select distinct $1[i] from
generate_series(array_lower($1,1), array_upper($1,1)) g(i));
$_$;


ALTER FUNCTION public.uniq(anyarray) OWNER TO "mobileAdmin";

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: items; Type: TABLE; Schema: public; Owner: mobileAdmin
--

CREATE TABLE items (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    topic_id smallint NOT NULL,
    name character varying(30),
    description character varying(150),
    volume character varying(10),
    cost money,
    count bigint,
    image character varying(18)
);


ALTER TABLE items OWNER TO "mobileAdmin";

--
-- Name: topics; Type: TABLE; Schema: public; Owner: mobileAdmin
--

CREATE TABLE topics (
    id smallint NOT NULL,
    name character varying(30)
);


ALTER TABLE topics OWNER TO "mobileAdmin";

--
-- Name: topics_id_seq; Type: SEQUENCE; Schema: public; Owner: mobileAdmin
--

CREATE SEQUENCE topics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE topics_id_seq OWNER TO "mobileAdmin";

--
-- Name: topics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mobileAdmin
--

ALTER SEQUENCE topics_id_seq OWNED BY topics.id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: mobileAdmin
--

CREATE TABLE users (
    uid uuid NOT NULL,
    phone character varying(12) NOT NULL,
    password character varying(60) NOT NULL,
    email character varying(40) NOT NULL,
    enabled boolean DEFAULT false NOT NULL,
    trycount integer DEFAULT 0,
    registered timestamp with time zone DEFAULT (now())::timestamp(0) with time zone,
    lastlogin timestamp with time zone,
    regid character varying(160)
);


ALTER TABLE users OWNER TO "mobileAdmin";

--
-- Name: topics id; Type: DEFAULT; Schema: public; Owner: mobileAdmin
--

ALTER TABLE ONLY topics ALTER COLUMN id SET DEFAULT nextval('topics_id_seq'::regclass);


--
-- Data for Name: items; Type: TABLE DATA; Schema: public; Owner: mobileAdmin
--

COPY items (id, topic_id, name, description, volume, cost, count, image) FROM stdin;
fdb9dbe0-b8b0-44a5-b350-411785876579	1	Holyland	Лосьон для растворения закрытых комедонов / Super Lotion LOTIONS	250	500.00 руб	5	img_1844_1.jpg
b691cb47-1353-4bf3-87c8-4e00c4574f7a	3	KAARAL	Маска реконструирующая с пчелиным маточным молочком для волос / Royal Jelly Cream 	500	147.00 руб	2	img_1187.jpg
c9de6e2d-0f64-48e2-9354-403fbc3efc72	2	Holyland	Маска сокращающая специальная / Special Mask MASKS	70	150.00 руб	10	special_mask.jpg
\.


--
-- Data for Name: topics; Type: TABLE DATA; Schema: public; Owner: mobileAdmin
--

COPY topics (id, name) FROM stdin;
1	Анестезия
2	Косметика для тела
3	Косметика для лица
4	Косметика для рук
\.


--
-- Name: topics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: mobileAdmin
--

SELECT pg_catalog.setval('topics_id_seq', 4, true);


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: mobileAdmin
--

COPY users (uid, phone, password, email, enabled, trycount, registered, lastlogin, regid) FROM stdin;
d59f5984-a4d5-5c56-99a4-7cf69765c04a	79260000000	$2a$10$RbTg4p79mHLw8PgVd/BYi.chzXN7T/uJFR67bKetoW09rFn5nWhWC	test@test.ru	t	0	2017-07-26 15:32:25+03	2019-03-28 15:43:46.222124+03	dhCsdXBGM7I:APA91bH0PyfWq1f680nKRr5z_tQKCCUthXZb65YuUaIKoeEfjPIJiob-H6AwCEudZ4MGylHHNJWXS7Ckvf-h3rxJ52ksUGRwELYb9tywAAuIg4-i0URwER0Q4M_EnW9aGhY22c4dTohB
eca392ca-415b-584f-9519-dfe87a32cccb	79265197181	$2a$10$RbTg4p79mHLw8PgVd/BYi.chzXN7T/uJFR67bKetoW09rFn5nWhWC	test@test.ru	t	0	2019-03-28 16:02:14+03	2019-03-28 21:24:08.588311+03	dhCsdXBGM7I:APA91bH0PyfWq1f680nKRr5z_tQKCCUthXZb65YuUaIKoeEfjPIJiob-H6AwCEudZ4MGylHHNJWXS7Ckvf-h3rxJ52ksUGRwELYb9tywAAuIg4-i0URwER0Q4M_EnW9aGhY22c4dTohB
\.


--
-- Name: users users_phone_key; Type: CONSTRAINT; Schema: public; Owner: mobileAdmin
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_phone_key UNIQUE (phone);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: mobileAdmin
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (uid);


--
-- PostgreSQL database dump complete
--

